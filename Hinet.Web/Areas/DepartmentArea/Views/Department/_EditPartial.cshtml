@using Hinet.Web.Areas.DepartmentArea.Models;
@using Newtonsoft.Json;

@model EditVM
@{
    var DepartmentDropdownData = ViewBag.ListDepartment as List<SelectListItem>;
    var TinhDropdownData = ViewBag.ListTinh as List<SelectListItem>;
    DepartmentDropdownData.Add(new SelectListItem() { Text = "--Chọn Khoa phòng--", Value = "", Selected = false });
    var listSelected = Html.Raw(JsonConvert.SerializeObject(Model.Province));
    var ListRole = ViewBag.ListRole as List<SelectListItem>;
}
<div class="modal-dialog">
    @using (Ajax.BeginForm("Edit", "Department", new { @area = "DepartmentArea" }, new AjaxOptions()
    {
        HttpMethod = "POST",
        OnFailure = "AjaxFormError",
        OnSuccess = "AjaxFormSuccess",
    }, new { id = "editForm" }))
    {
    @Html.AntiForgeryToken()
        //HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
 <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <div class="center">
                <h4 class="modal-title">Cập nhật phòng, ban, đơn vị</h4>
            </div>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <input type='hidden' name='Id' value='@Model.Id' />
                <div class="form-group">
                    <label class="control-label col-sm-3">Thuộc phòng ban<span class="red">*</span></label>
                    <div class="col-sm-8">
                        @Html.DropDownList("Parent_Id", DepartmentDropdownData, new { @class = "form-control", @disabled = "disabled" })
                        @Html.HiddenFor(m => m.ParentId)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3">Tên <span class="red">*</span></label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3">Mã <span class="red">*</span></label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control toUpper" })
                        @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group TinhProvince">
                        <label class="control-label col-sm-3">Tỉnh quản lý</label>
                        <div class="col-sm-8">
                            @Html.DropDownList("Province", TinhDropdownData, new { @class = "form-control", @multiple = "multiple", @value = "t1" })
                            @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3">Quản lý tất cả các tỉnh</label>
                        <div class="col-sm-8">
                            <label><input type="checkbox" value="true" name="IsAllProvine" id="IsAllProvine" onclick="ClickAllProvine()" /> Tất cả</label>
                        </div>
                    </div>*@
                <div class="form-group">
                    <label class="control-label col-sm-3">Loại</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.Loai, ViewBag.DropdownListLoai as List<SelectListItem>, new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(m => m.Loai, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3">Mô tả phòng ban</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(m => m.Mota, 3, 4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Loai, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3">Vai trò mặc định </label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.DefaultRole, ListRole, "--Chọn vai trò--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DefaultRole, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                        <label class="control-label col-sm-3">Là phòng ban chất lượng cao</label>
                        <div class="col-sm-8">
                            <input type="checkbox" name="IsHigh" id="IsHigh" value="true" @(Model.IsHigh == true ? "checked":"") />
                        </div>
                    </div>*@
            </div>
        </div>
        <div class="modal-footer center">
            <button type="submit" class="btn btn-primary btn-sm">Hoàn thành</button>

            <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
        </div>
    </div>
    }
</div>
<script>
    $('.select2').select2();
    var ArraySelect = eval(@listSelected);
    $("#Province").select2();
    $("#DefaultRole").select2();

	$("#Province").val(ArraySelect).change();

	function ClickAllProvine() {
		if ($("#IsAllProvine:checked").val() == "true") {
			$(".TinhProvince").addClass("disabledTinhProvince");
		} else {
			$(".TinhProvince").removeClass("disabledTinhProvince");
		}
	}
	if ('@Model.IsAllProvine'!= "" && '@Model.IsAllProvine' == "True") {
		$('#IsAllProvine').prop('checked', true);
		$(".TinhProvince").addClass("disabledTinhProvince");
	}
</script>
@Scripts.Render("~/bundles/jqueryval")